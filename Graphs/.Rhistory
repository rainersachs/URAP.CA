ironsix2 <- two_ion_MIXDER_small$ironsix
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small$CI_lower * 100, rev(two_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####2-ion 12 dose without covariances (larger CI's)
#Assuming the working directory is the location of this R file (On Github the csv file is in the same location as this R file)
two_ion_MIXDER_small_var <- read.csv("2ionMonteCarlovar.csv")
#The graphing part
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small_var$CI_lower * 100, rev(two_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 50 dose
d_6ion <- c(seq(0, 0.009, 0.001), seq(0.01, 0.4, by = 0.01))
six_ion_MIXDER <- read.csv("6ionMonteCarlo.csv")
#the graphing part
d11 <- six_ion_MIXDER$d
CA11 <- six_ion_MIXDER$CA
simpleeffect11 <- six_ion_MIXDER$simpleeffect
silicon11 <- six_ion_MIXDER$silicon
titanium11 <- six_ion_MIXDER$titanium
ironthree11 <- six_ion_MIXDER$ironthree
ironfour11 <- six_ion_MIXDER$ironfour
ironsix11 <- six_ion_MIXDER$ironsix
oxygen11 <- six_ion_MIXDER$oxygen
plot(x = d11 * 100, y = CA11 * 100, type = "l", col = "red")
lines(x = d11 * 100, y = simpleeffect11 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d11 * 100, y = silicon11* 100, col = "green")
lines(x = d11 * 100, y = titanium11* 100, col = "green")
lines(x = d11 * 100, y = ironthree11* 100, col = "green")
lines(x = d11 * 100, y = ironfour11* 100, col = "green")
lines(x = d11 * 100, y = ironsix11* 100, col = "green")
lines(x = d11 * 100, y = oxygen11* 100, col = "green")
lines(x= d11*100 , y = six_ion_MIXDER$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d11*100 , y = six_ion_MIXDER$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d11*100,rev(d11*100)),c(six_ion_MIXDER$CI_lower * 100, rev(six_ion_MIXDER$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 10 dose
d_6ion_small <- d_6ion[seq(1, 50, by = 5)]
six_ion_MIXDER_small <- six_ion_MIXDER[seq(1, 50, by = 5),]
#the graphing part
d22 <- six_ion_MIXDER_small$d
CA22 <- six_ion_MIXDER_small$CA
simpleeffect22 <- six_ion_MIXDER_small$simpleeffect
silicon22 <- six_ion_MIXDER_small$silicon
titanium22 <- six_ion_MIXDER_small$titanium
ironthree22 <- six_ion_MIXDER_small$ironthree
ironfour22 <- six_ion_MIXDER_small$ironfour
ironsix22 <- six_ion_MIXDER_small$ironsix
oxygen22 <- six_ion_MIXDER_small$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small$CI_lower * 100, rev(six_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
file.choose()
setwd("C:\\Users\\peter\\OneDrive\\UC Berkeley\\Research\\Radiology, Sachs\\Github Repo\\URAP.CA\\Graphs")
two_ion_MIXDER = read.csv("2ionMonteCarlo.csv") #This is the Monte Carlo results with seed 19970101
#The graphing part
d1 <- two_ion_MIXDER$d
CA1 <- two_ion_MIXDER$CA
simpleeffect1 <- two_ion_MIXDER$simpleeffect
silicon1 <- two_ion_MIXDER$silicon
ironsix1 <- two_ion_MIXDER$ironsix
plot(x = d1 * 100, y = CA1 * 100, type = "l", col = "red")
lines(x = d1 * 100, y = simpleeffect1 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d1 * 100, y = silicon1* 100, col = "green")
lines(x = d1 * 100, y = ironsix1* 100, col = "green")
lines(x= d1*100 , y = two_ion_MIXDER$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d1*100 , y = two_ion_MIXDER$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d1*100,rev(d1*100)),c(two_ion_MIXDER$CI_lower * 100, rev(two_ion_MIXDER$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####2-ion 12 dose
d_2ion_small = d[seq(1,60, by = 5)]
two_ion_MIXDER_small <- two_ion_MIXDER[seq(1,60, by = 5), ]
#The graphing part
d2 <- two_ion_MIXDER_small$d
CA2 <- two_ion_MIXDER_small$CA
simpleeffect2 <- two_ion_MIXDER_small$simpleeffect
silicon2 <- two_ion_MIXDER_small$silicon
ironsix2 <- two_ion_MIXDER_small$ironsix
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small$CI_lower * 100, rev(two_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####2-ion 12 dose without covariances (larger CI's)
#Assuming the working directory is the location of this R file (On Github the csv file is in the same location as this R file)
two_ion_MIXDER_small_var <- read.csv("2ionMonteCarlovar.csv")
#The graphing part
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small_var$CI_lower * 100, rev(two_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 50 dose
d_6ion <- c(seq(0, 0.009, 0.001), seq(0.01, 0.4, by = 0.01))
six_ion_MIXDER <- read.csv("6ionMonteCarlo.csv")
#the graphing part
d11 <- six_ion_MIXDER$d
CA11 <- six_ion_MIXDER$CA
simpleeffect11 <- six_ion_MIXDER$simpleeffect
silicon11 <- six_ion_MIXDER$silicon
titanium11 <- six_ion_MIXDER$titanium
ironthree11 <- six_ion_MIXDER$ironthree
ironfour11 <- six_ion_MIXDER$ironfour
ironsix11 <- six_ion_MIXDER$ironsix
oxygen11 <- six_ion_MIXDER$oxygen
plot(x = d11 * 100, y = CA11 * 100, type = "l", col = "red")
lines(x = d11 * 100, y = simpleeffect11 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d11 * 100, y = silicon11* 100, col = "green")
lines(x = d11 * 100, y = titanium11* 100, col = "green")
lines(x = d11 * 100, y = ironthree11* 100, col = "green")
lines(x = d11 * 100, y = ironfour11* 100, col = "green")
lines(x = d11 * 100, y = ironsix11* 100, col = "green")
lines(x = d11 * 100, y = oxygen11* 100, col = "green")
lines(x= d11*100 , y = six_ion_MIXDER$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d11*100 , y = six_ion_MIXDER$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d11*100,rev(d11*100)),c(six_ion_MIXDER$CI_lower * 100, rev(six_ion_MIXDER$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 10 dose
d_6ion_small <- d_6ion[seq(1, 50, by = 5)]
six_ion_MIXDER_small <- six_ion_MIXDER[seq(1, 50, by = 5),]
#the graphing part
d22 <- six_ion_MIXDER_small$d
CA22 <- six_ion_MIXDER_small$CA
simpleeffect22 <- six_ion_MIXDER_small$simpleeffect
silicon22 <- six_ion_MIXDER_small$silicon
titanium22 <- six_ion_MIXDER_small$titanium
ironthree22 <- six_ion_MIXDER_small$ironthree
ironfour22 <- six_ion_MIXDER_small$ironfour
ironsix22 <- six_ion_MIXDER_small$ironsix
oxygen22 <- six_ion_MIXDER_small$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small$CI_lower * 100, rev(six_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 10 dise without covariances (larger Ci's)
six_ion_MIXDER_small_var <- read.csv("6ionMonteCarlovar.csv")
d22 <- six_ion_MIXDER_small_var$d
CA22 <- six_ion_MIXDER_small_var$CA
simpleeffect22 <- six_ion_MIXDER_small_var$simpleeffect
silicon22 <- six_ion_MIXDER_small_var$silicon
titanium22 <- six_ion_MIXDER_small_var$titanium
ironthree22 <- six_ion_MIXDER_small_var$ironthree
ironfour22 <- six_ion_MIXDER_small_var$ironfour
ironsix22 <- six_ion_MIXDER_small_var$ironsix
oxygen22 <- six_ion_MIXDER_small_var$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
six_ion_MIXDER4$simpleeffect = IDER(d = 1/6*d3, L = 125, Z.b = 770) + IDER(d = 1/6*d3, L = 175, Z.b = 1075) + IDER(d = 1/6*d3, L = 75, Z.b = 595) + IDER(d = 1/6*d3, L = 100, Z.b = 690) + IDER(d = 1/6*d3, L = 195, Z.b = 1245) + IDER(d = 1/6*d3, L = 240, Z.b = 1585) + 0.00071
six_ion_MIXDER4$simpleeffect = IDER(d = 1/6*d4, L = 125, Z.b = 770) + IDER(d = 1/6*d4, L = 175, Z.b = 1075) + IDER(d = 1/6*d4, L = 75, Z.b = 595) + IDER(d = 1/6*d4, L = 100, Z.b = 690) + IDER(d = 1/6*d4, L = 195, Z.b = 1245) + IDER(d = 1/6*d4, L = 240, Z.b = 1585) + 0.00071
#Get the individual IDERS
six_ion_MIXDER4$oxygen = IDER(d = d4, L = 75, Z.b = 595) + 0.00071
six_ion_MIXDER4$silicon = IDER(d = d4, L = 100, Z.b = 690) + 0.00071
six_ion_MIXDER4$titanium = IDER(d = d4, L = 125, Z.b = 770) + 0.00071
six_ion_MIXDER4$ironsix = IDER(d = d4, L = 175, Z.b = 1075) + 0.00071
six_ion_MIXDER4$ironfour = IDER(d = d4, L = 195, Z.b = 1245) + 0.00071
six_ion_MIXDER4$ironthree = IDER(d = d4, L = 240, Z.b = 1585) + 0.00071
write.csv(six_ion_MIXDER4, "6ionMonteCarlovar.csv", row.names = F)
write.csv(six_ion_MIXDER4, "6ionMonteCarlovar.csv", row.names = F)
six_ion_MIXDER_small_var <- read.csv("6ionMonteCarlovar.csv")
#the graphing part
d22 <- six_ion_MIXDER_small_var$d
CA22 <- six_ion_MIXDER_small_var$CA
simpleeffect22 <- six_ion_MIXDER_small_var$simpleeffect
silicon22 <- six_ion_MIXDER_small_var$silicon
titanium22 <- six_ion_MIXDER_small_var$titanium
ironthree22 <- six_ion_MIXDER_small_var$ironthree
ironfour22 <- six_ion_MIXDER_small_var$ironfour
ironsix22 <- six_ion_MIXDER_small_var$ironsix
oxygen22 <- six_ion_MIXDER_small_var$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
library(deSolve) # package for solving differential equations
library(minpack.lm) # package for non-linear regression #rks to laz: I think we probably can just use nls() in stats, not nlsLM from linpack. Please check in R documentation if there is any functional difference at all
library(mvtnorm) # package for calculating confidence intervals by Monte Carlo simulation based on variance-covariance matrices #rks to laz: I added to comment.Please check that my addition is OK.
#rm(list=ls())
set.seed(19970101)
####2-ion 60 dose
d_2ion = c(seq(0, 0.009, 0.001), seq(0.01, 0.5, by = 0.01))
#Assuming the working directory is the location of this R file (On Github the csv file is in the same location as this R file)
two_ion_MIXDER = read.csv("2ionMonteCarlo.csv") #This is the Monte Carlo results with seed 19970101
#The graphing part
d1 <- two_ion_MIXDER$d
CA1 <- two_ion_MIXDER$CA
simpleeffect1 <- two_ion_MIXDER$simpleeffect
silicon1 <- two_ion_MIXDER$silicon
ironsix1 <- two_ion_MIXDER$ironsix
plot(x = d1 * 100, y = CA1 * 100, type = "l", col = "red")
lines(x = d1 * 100, y = simpleeffect1 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d1 * 100, y = silicon1* 100, col = "green")
lines(x = d1 * 100, y = ironsix1* 100, col = "green")
lines(x= d1*100 , y = two_ion_MIXDER$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d1*100 , y = two_ion_MIXDER$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d1*100,rev(d1*100)),c(two_ion_MIXDER$CI_lower * 100, rev(two_ion_MIXDER$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####2-ion 12 dose
d_2ion_small = d[seq(1,60, by = 5)]
two_ion_MIXDER_small <- two_ion_MIXDER[seq(1,60, by = 5), ]
#The graphing part
d2 <- two_ion_MIXDER_small$d
CA2 <- two_ion_MIXDER_small$CA
simpleeffect2 <- two_ion_MIXDER_small$simpleeffect
silicon2 <- two_ion_MIXDER_small$silicon
ironsix2 <- two_ion_MIXDER_small$ironsix
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small$CI_lower * 100, rev(two_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####2-ion 12 dose without covariances (larger CI's)
#Assuming the working directory is the location of this R file (On Github the csv file is in the same location as this R file)
two_ion_MIXDER_small_var <- read.csv("2ionMonteCarlovar.csv")
#The graphing part
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small_var$CI_lower * 100, rev(two_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 50 dose
d_6ion <- c(seq(0, 0.009, 0.001), seq(0.01, 0.4, by = 0.01))
six_ion_MIXDER <- read.csv("6ionMonteCarlo.csv")
#the graphing part
d11 <- six_ion_MIXDER$d
CA11 <- six_ion_MIXDER$CA
simpleeffect11 <- six_ion_MIXDER$simpleeffect
silicon11 <- six_ion_MIXDER$silicon
titanium11 <- six_ion_MIXDER$titanium
ironthree11 <- six_ion_MIXDER$ironthree
ironfour11 <- six_ion_MIXDER$ironfour
ironsix11 <- six_ion_MIXDER$ironsix
oxygen11 <- six_ion_MIXDER$oxygen
plot(x = d11 * 100, y = CA11 * 100, type = "l", col = "red")
lines(x = d11 * 100, y = simpleeffect11 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d11 * 100, y = silicon11* 100, col = "green")
lines(x = d11 * 100, y = titanium11* 100, col = "green")
lines(x = d11 * 100, y = ironthree11* 100, col = "green")
lines(x = d11 * 100, y = ironfour11* 100, col = "green")
lines(x = d11 * 100, y = ironsix11* 100, col = "green")
lines(x = d11 * 100, y = oxygen11* 100, col = "green")
lines(x= d11*100 , y = six_ion_MIXDER$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d11*100 , y = six_ion_MIXDER$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d11*100,rev(d11*100)),c(six_ion_MIXDER$CI_lower * 100, rev(six_ion_MIXDER$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 10 dose
d_6ion_small <- d_6ion[seq(1, 50, by = 5)]
six_ion_MIXDER_small <- six_ion_MIXDER[seq(1, 50, by = 5),]
#the graphing part
d22 <- six_ion_MIXDER_small$d
CA22 <- six_ion_MIXDER_small$CA
simpleeffect22 <- six_ion_MIXDER_small$simpleeffect
silicon22 <- six_ion_MIXDER_small$silicon
titanium22 <- six_ion_MIXDER_small$titanium
ironthree22 <- six_ion_MIXDER_small$ironthree
ironfour22 <- six_ion_MIXDER_small$ironfour
ironsix22 <- six_ion_MIXDER_small$ironsix
oxygen22 <- six_ion_MIXDER_small$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small$CI_lower * 100, rev(six_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 10 dise without covariances (larger Ci's)
six_ion_MIXDER_small_var <- read.csv("6ionMonteCarlovar.csv")
#the graphing part
d22 <- six_ion_MIXDER_small_var$d
CA22 <- six_ion_MIXDER_small_var$CA
simpleeffect22 <- six_ion_MIXDER_small_var$simpleeffect
silicon22 <- six_ion_MIXDER_small_var$silicon
titanium22 <- six_ion_MIXDER_small_var$titanium
ironthree22 <- six_ion_MIXDER_small_var$ironthree
ironfour22 <- six_ion_MIXDER_small_var$ironfour
ironsix22 <- six_ion_MIXDER_small_var$ironsix
oxygen22 <- six_ion_MIXDER_small_var$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
library(deSolve) # package for solving differential equations
library(minpack.lm) # package for non-linear regression #rks to laz: I think we probably can just use nls() in stats, not nlsLM from linpack. Please check in R documentation if there is any functional difference at all
library(mvtnorm) # package for calculating confidence intervals by Monte Carlo simulation based on variance-covariance matrices #rks to laz: I added to comment.Please check that my addition is OK.
#rm(list=ls())
set.seed(19970101)
####2-ion 60 dose
d_2ion = c(seq(0, 0.009, 0.001), seq(0.01, 0.5, by = 0.01))
#Assuming the working directory is the location of this R file (On Github the csv file is in the same location as this R file)
two_ion_MIXDER = read.csv("2ionMonteCarlo.csv") #This is the Monte Carlo results with seed 19970101
#The graphing part
d1 <- two_ion_MIXDER$d
CA1 <- two_ion_MIXDER$CA
simpleeffect1 <- two_ion_MIXDER$simpleeffect
silicon1 <- two_ion_MIXDER$silicon
ironsix1 <- two_ion_MIXDER$ironsix
plot(x = d1 * 100, y = CA1 * 100, type = "l", col = "red")
lines(x = d1 * 100, y = simpleeffect1 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d1 * 100, y = silicon1* 100, col = "green")
lines(x = d1 * 100, y = ironsix1* 100, col = "green")
lines(x= d1*100 , y = two_ion_MIXDER$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d1*100 , y = two_ion_MIXDER$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d1*100,rev(d1*100)),c(two_ion_MIXDER$CI_lower * 100, rev(two_ion_MIXDER$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####2-ion 12 dose
d_2ion_small = d[seq(1,60, by = 5)]
two_ion_MIXDER_small <- two_ion_MIXDER[seq(1,60, by = 5), ]
#The graphing part
d2 <- two_ion_MIXDER_small$d
CA2 <- two_ion_MIXDER_small$CA
simpleeffect2 <- two_ion_MIXDER_small$simpleeffect
silicon2 <- two_ion_MIXDER_small$silicon
ironsix2 <- two_ion_MIXDER_small$ironsix
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small$CI_lower * 100, rev(two_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####2-ion 12 dose without covariances (larger CI's)
#Assuming the working directory is the location of this R file (On Github the csv file is in the same location as this R file)
two_ion_MIXDER_small_var <- read.csv("2ionMonteCarlovar.csv")
#The graphing part
plot(x = d2 * 100, y = CA2 * 100, type = "l", col = "red")
lines(x = d2 * 100, y = simpleeffect2 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d2 * 100, y = silicon2* 100, col = "green")
lines(x = d2 * 100, y = ironsix2* 100, col = "green")
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d2*100 , y = two_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d2*100,rev(d2*100)),c(two_ion_MIXDER_small_var$CI_lower * 100, rev(two_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 50 dose
d_6ion <- c(seq(0, 0.009, 0.001), seq(0.01, 0.4, by = 0.01))
six_ion_MIXDER <- read.csv("6ionMonteCarlo.csv")
#the graphing part
d11 <- six_ion_MIXDER$d
CA11 <- six_ion_MIXDER$CA
simpleeffect11 <- six_ion_MIXDER$simpleeffect
silicon11 <- six_ion_MIXDER$silicon
titanium11 <- six_ion_MIXDER$titanium
ironthree11 <- six_ion_MIXDER$ironthree
ironfour11 <- six_ion_MIXDER$ironfour
ironsix11 <- six_ion_MIXDER$ironsix
oxygen11 <- six_ion_MIXDER$oxygen
plot(x = d11 * 100, y = CA11 * 100, type = "l", col = "red")
lines(x = d11 * 100, y = simpleeffect11 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d11 * 100, y = silicon11* 100, col = "green")
lines(x = d11 * 100, y = titanium11* 100, col = "green")
lines(x = d11 * 100, y = ironthree11* 100, col = "green")
lines(x = d11 * 100, y = ironfour11* 100, col = "green")
lines(x = d11 * 100, y = ironsix11* 100, col = "green")
lines(x = d11 * 100, y = oxygen11* 100, col = "green")
lines(x= d11*100 , y = six_ion_MIXDER$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d11*100 , y = six_ion_MIXDER$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d11*100,rev(d11*100)),c(six_ion_MIXDER$CI_lower * 100, rev(six_ion_MIXDER$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 10 dose
d_6ion_small <- d_6ion[seq(1, 50, by = 5)]
six_ion_MIXDER_small <- six_ion_MIXDER[seq(1, 50, by = 5),]
#the graphing part
d22 <- six_ion_MIXDER_small$d
CA22 <- six_ion_MIXDER_small$CA
simpleeffect22 <- six_ion_MIXDER_small$simpleeffect
silicon22 <- six_ion_MIXDER_small$silicon
titanium22 <- six_ion_MIXDER_small$titanium
ironthree22 <- six_ion_MIXDER_small$ironthree
ironfour22 <- six_ion_MIXDER_small$ironfour
ironsix22 <- six_ion_MIXDER_small$ironsix
oxygen22 <- six_ion_MIXDER_small$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small$CI_lower * 100, rev(six_ion_MIXDER_small$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
####6-ion 10 dise without covariances (larger Ci's)
six_ion_MIXDER_small_var <- read.csv("6ionMonteCarlovar.csv")
#the graphing part
d22 <- six_ion_MIXDER_small_var$d
CA22 <- six_ion_MIXDER_small_var$CA
simpleeffect22 <- six_ion_MIXDER_small_var$simpleeffect
silicon22 <- six_ion_MIXDER_small_var$silicon
titanium22 <- six_ion_MIXDER_small_var$titanium
ironthree22 <- six_ion_MIXDER_small_var$ironthree
ironfour22 <- six_ion_MIXDER_small_var$ironfour
ironsix22 <- six_ion_MIXDER_small_var$ironsix
oxygen22 <- six_ion_MIXDER_small_var$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
d22 <- six_ion_MIXDER_small_var$d
CA22 <- six_ion_MIXDER_small_var$CA
simpleeffect22 <- six_ion_MIXDER_small_var$simpleeffect
silicon22 <- six_ion_MIXDER_small_var$silicon
titanium22 <- six_ion_MIXDER_small_var$titanium
ironthree22 <- six_ion_MIXDER_small_var$ironthree
ironfour22 <- six_ion_MIXDER_small_var$ironfour
ironsix22 <- six_ion_MIXDER_small_var$ironsix
oxygen22 <- six_ion_MIXDER_small_var$oxygen
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
title(main="6-ion Model", sub="10 Doses without Covariances",
xlab="Dose", ylab="CA")
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red")
title(main="6-ion Model", sub="10 Doses without Covariances",
xlab="Dose", ylab="CA")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red", main="6-ion Model", sub="10 Doses without Covariances",
xlab="Dose", ylab="CA")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
plot(x = d22 * 100, y = CA22 * 100, type = "l", col = "red", main="6-ion Model", sub="10 Doses without Covariances",
xlab="Dose * 100", ylab="CA * 100")
lines(x = d22 * 100, y = simpleeffect22 * 100, col = "black", lty = 2, lwd = 0.5)
lines(x = d22 * 100, y = silicon22* 100, col = "green")
lines(x = d22 * 100, y = titanium22* 100, col = "green")
lines(x = d22 * 100, y = ironthree22* 100, col = "green")
lines(x = d22 * 100, y = ironfour22* 100, col = "green")
lines(x = d22 * 100, y = ironsix22* 100, col = "green")
lines(x = d22 * 100, y = oxygen22* 100, col = "green")
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_upper * 100, lty = 'dashed', col = 'red')
lines(x= d22*100 , y = six_ion_MIXDER_small_var$CI_lower * 100, lty = 'dashed', col = 'red')
polygon(c(d22*100,rev(d22*100)),c(six_ion_MIXDER_small_var$CI_lower * 100, rev(six_ion_MIXDER_small_var$CI_upper * 100)),col = rgb(1, 0, 0,0.5), border = NA)
